{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","name","SORT_ALPHABET","SORT_LENGTH","App","useState","sort","setSort","isReversed","setIsReversed","goodsRender","goods","reverse","sortedGoods","goodA","goodB","localeCompare","length","sortGoods","className","type","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAA0B,CACrC,CAAEC,KAAM,aACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,aACR,CAAEA,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,SACR,CAAEA,KAAM,OACR,CAAEA,KAAM,WAOJC,EAAgB,WAChBC,EAAc,SAuBPC,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAxBU,SAACC,EAAeL,EAAcM,GAC9C,IAAMC,EAAW,YAAOF,GAExB,OAAQL,GACN,KAAKJ,EACHW,EAAYP,MAAK,SAACQ,EAAOC,GAAR,OAAkBD,EAAMb,KAAKe,cAAcD,EAAMd,SAClE,MACF,KAAKE,EACHU,EAAYP,MAAK,SAACQ,EAAOC,GAAR,OAAkBD,EAAMb,KAAKgB,OAASF,EAAMd,KAAKgB,UAUtE,OAJIL,GACFC,EAAYD,UAGPC,EAMaK,CAAUlB,EAAiBM,EAAME,GAOrD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,IAASJ,IAEvBoB,QAAS,kBAAMf,EAAQL,IALzB,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,IAASH,IAEvBmB,QAAS,kBAAMf,EAAQJ,IALzB,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfb,IAEdc,QAAS,kBAAMb,GAAc,SAAAc,GAAO,OAAKA,MAL3C,sBAUEjB,GAAQE,IACR,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZf,EAAQ,IACRE,GAAc,IAqCR,sBAUJ,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,EAAKxB,MADgBwB,EAAKxB,eCnGvCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74a39d60.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer: Good[] = [\n  { name: 'Dumplings' },\n  { name: 'Carrot' },\n  { name: 'Eggs' },\n  { name: 'Ice cream' },\n  { name: 'Apple' },\n  { name: 'Bread' },\n  { name: 'Fish' },\n  { name: 'Honey' },\n  { name: 'Jam' },\n  { name: 'Garlic' },\n];\n\ninterface Good {\n  name: string;\n}\n\nconst SORT_ALPHABET = 'alphabet';\nconst SORT_LENGTH = 'length';\n\nconst sortGoods = (goods: Good[], sort: string, reverse: boolean): Good[] => {\n  const sortedGoods = [...goods];\n\n  switch (sort) {\n    case SORT_ALPHABET:\n      sortedGoods.sort((goodA, goodB) => goodA.name.localeCompare(goodB.name));\n      break;\n    case SORT_LENGTH:\n      sortedGoods.sort((goodA, goodB) => goodA.name.length - goodB.name.length);\n      break;\n    default:\n      break;\n  }\n\n  if (reverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App = () => {\n  const [sort, setSort] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const goodsRender = sortGoods(goodsFromServer, sort, isReversed);\n\n  const reset = () => {\n    setSort('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sort !== SORT_ALPHABET,\n          })}\n          onClick={() => setSort(SORT_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sort !== SORT_LENGTH,\n          })}\n          onClick={() => setSort(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === false,\n          })}\n          onClick={() => setIsReversed(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {(sort || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsRender.map(good => (\n          <li data-cy=\"Good\" key={good.name}>\n            {good.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}